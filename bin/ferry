#!/usr/bin/ruby
require 'ferry'

OptionParser.new do |opts|
  options = {}
  opts.banner = "See full documentation at http://cmu-is-projects.github.io/ferry"

  opts.on("--to_csv ENVIRONMENT TABLE", 'Exports table to csv file in db/csv/[your db environment]/[your table]') do |opt|
    raise "too many arguments for input" unless ARGV.length <= 1
    raise "please enter a field for environment and table" unless ARGV.length == 1
    exporter = Ferry::Exporter.new
    exporter.to_csv(opt, ARGV[0])
  end

  opts.on("--to_yaml ENVIRONMENT TABLE", 'Exports table to yaml file in db/yaml/[your db environment]/[your table]') do |opt|
    raise "too many arguments for input" unless ARGV.length <= 1
    raise "please enter a field for environment and table" unless ARGV.length == 1
    exporter = Ferry::Exporter.new
    exporter.to_yaml(opt, ARGV[0])
  end

  opts.on('--import ENVIRONMENT TABLE FILEPATH', 'Imports data from specified file into table and environment of your specification') do |opt|
    raise "too many arguments for input" unless ARGV.length <= 2
    raise "please enter a field for environment and table and filename" unless ARGV.length == 2
    importer = Ferry::Importer.new
    importer.import(opt, ARGV[0], ARGV[1])
  end

  opts.on('--db_switch ENVIRONMENT ADAPTER', 'Switches specified database env to a new adapter') do |opt|
    raise "too many arguments for input" unless ARGV.length <= 1
    raise "please enter a field for environment and table" unless ARGV.length == 1
    questionmaster = Ferry::Utilities.new
    if questionmaster.continue?("Are you sure you want to switch to a #{ARGV[0]} database in your #{opt} env? It could result in installing software that impacts your project.")
      switcher = Ferry::Switcher.new
      switcher.to_new_db_type(opt, ARGV[0])
    end
  end

  opts.on('--init', 'Initializes ferry.rb file in config directory') do |opt|
    filemaker = Ferry::Utilities.new
    filemaker.make_starter_file
  end

  opts.on_tail('-h', '--help', 'Shows this message') do
    puts opts
    exit
  end

  puts opts if ARGV[0] == nil
end.parse!
