#!/usr/bin/ruby
require 'ferry'

class OptionParser
  def check_appro_args(number_of_args)
    raise "too many arguments for input" unless ARGV.length <= number_of_args
    raise "please enter a field for environment and table and filename" unless ARGV.length == number_of_args
  end
end

OptionParser.new do |opts|
  options = {}
  opts.banner = "See more documentation at http://cmu-is-projects.github.io/ferry"

  opts.on( "--fulldump ENVIRONMENT", "Dumps database from specified env to sql file." ) do |opt|
    dumper = Ferry::Dumper.new
    dumper.dump(opt, ARGV[0])
  end

  opts.on('--import_csv ENVIRONMENT TABLE FILEPATH', 'Imports data from specified file into table and environment of your specification') do |opt|
    check_appro_args(2)
    importer = Ferry::Importer.new
    importer.import_csv(opt, ARGV[0], ARGV[1])
  end

  opts.on('--import_json ENVIRONMENT TABLE FILEPATH', 'Imports data from specified file into table and environment of your specification') do |opt|
    check_appro_args(2)
    importer = Ferry::Importer.new
    importer.import_json(opt, ARGV[0], ARGV[1])
  end

  opts.on('-i', '--init', 'Initializes ferry.rb file in config directory') do |opt|
    filemaker = Ferry::Utilities.new
    filemaker.make_starter_file
  end

  opts.on("--to_csv ENVIRONMENT TABLE", 'Exports table to csv file in db/csv/[your db environment]/[your table]') do |opt|
    check_appro_args(1)
    exporter = Ferry::Exporter.new
    exporter.to_csv(opt, ARGV[0])
  end

  opts.on("--to_json ENVIRONMENT TABLE", 'Exports table to json file in db/json/[your db environment]/[your table]') do |opt|
    check_appro_args(1)
    exporter = Ferry::Exporter.new
    exporter.to_json(opt, ARGV[0])
  end

  opts.on("--to_yaml ENVIRONMENT TABLE", 'Exports table to yaml file in db/yaml/[your db environment]/[your table]') do |opt|
    check_appro_args(1)
    exporter = Ferry::Exporter.new
    exporter.to_yaml(opt, ARGV[0])
  end

  opts.on( "-v", "--version", String, "Prints version of Ferry." ) do |opt|
    ferry_utils = Ferry::Utilities.new
    ferry_utils.print_version
  end

  opts.on_tail('-h', '--help', 'Shows this message') do
    puts opts
    exit
  end

  puts opts if ARGV[0] == nil
end.parse!
